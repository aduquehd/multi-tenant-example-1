"""
Django settings for multitenantproject project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'a718fv$f#96udr21e(qj0_@a_t!=4^x^q7z9n$5&fni)zv^@a+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

SHARED_APPS = (
    'tenant_schemas',  # mandatory, should always be before any django app
    'clients',  # The app where the tenant model resides in

    'django.contrib.contenttypes',

    'main',
)

TENANT_APPS = (
    'django.contrib.contenttypes',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'testmodels',

)

INSTALLED_APPS = [
    'tenant_schemas',
    'clients',
    'main',
    'testmodels',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'tenant_schemas.middleware.TenantMiddleware',

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'multitenantproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'multitenantproject.wsgi.application'

TENANT_MODEL = "clients.Client"

if os.environ.get("ENVIRONMENT_NAME") in ("PRODUCTION",):
    SECRET_KEY = os.environ["MTP_SECRET_KEY"]
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')
    URL_DOMAIN = os.environ['MTP_URL_DOMAIN']
    DEBUG = False
    IPFS_URL = "http://127.0.0.1:8080"

    ALLOWED_HOSTS = ['*']

    DATABASES = {
        'default': {
            'ENGINE': os.environ['MTP_DB_ENGINE'],
            'NAME': os.environ["MTP_DB_NAME"],
            'HOST': os.environ["MTP_DB_HOST"],
            'PORT': os.environ["MTP_DB_PORT"],
            'USER': os.environ["MTP_DB_USER"],
            'PASSWORD': os.environ["MTP_DB_PASSWORD"],
        }
    }

else:
    from .local_info import NAME, HOST, PORT, USER, PASSWORD, ENGINE

    SECRET_KEY = 'asdf=sf9ate@k'
    URL_DOMAIN = "localhost"
    DEBUG = True
    IPFS_URL = "http://127.0.0.1:8080"

    ALLOWED_HOSTS = ['*']

    DATABASES = {
        'default': {
            'ENGINE': ENGINE,
            'NAME': 'postgres',
            'USER': 'postgres',
            'HOST': 'db',
            'PORT': 5432,
        }
    }

DATABASE_ROUTERS = (
    'tenant_schemas.routers.TenantSyncRouter',
)

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
SITE_ID = 1
DEFAULT_FILE_STORAGE = 'tenant_schemas.storage.TenantFileSystemStorage'
